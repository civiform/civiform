/**
 * DO NOT EDIT THIS FILE DIRECTLY
 *
 * This file is generated based on server/conf/env_var_docs.json
 *
 * To update it, run bin/generate-settings-manifest
 */

package services.settings;

import static com.google.common.base.Preconditions.checkNotNull;

import com.google.common.annotations.VisibleForTesting;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableMap;
import com.typesafe.config.Config;
import java.util.Optional;
import javax.inject.Inject;
import play.mvc.Http.Request;

/** Data class providing access to server settings. */
public final class SettingsManifest extends AbstractSettingsManifest {

  private final ImmutableMap<String, SettingsSection> settingsSections;

  @Inject
  public SettingsManifest(Config config) {
    super(config);
    this.settingsSections = GENERATED_SECTIONS;
  }

  @VisibleForTesting
  public SettingsManifest(ImmutableMap<String, SettingsSection> settingsSections, Config config) {
    super(config);
    this.settingsSections = checkNotNull(settingsSections);
  }

  /** A map of setting section names to {@link SettingsSection}s. */
  @Override
  public ImmutableMap<String, SettingsSection> getSections() {
    return settingsSections;
  }

  {% for method_spec in getter_method_specs %}
  /** {{method_spec.doc()}} */
  public {{method_spec.return_type()}} get{{method_spec.method_name()}}() {
    return {{method_spec.internal_getter()}}("{{method_spec.variable_name()}}");
  }
  {% if method_spec.variable.type == "bool" %}
  /** {{method_spec.doc()}} */
  public {{method_spec.return_type()}} get{{method_spec.method_name()}}(Request request) {
    return {{method_spec.internal_getter()}}("{{method_spec.variable_name()}}", request);
  }
  {% endif %}
  {% endfor %}

  private static final ImmutableMap<String, SettingsSection> GENERATED_SECTIONS =
    {{sections}};
}
