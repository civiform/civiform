#! /usr/bin/env bash

source lib/out.sh
source azure/lib.sh

# DOC: Generate JKS keystore and upload to Azure Blob Storage. Make sure to run the key_vault_setup script before running this one

do
  case "${flag}" in
    g) resource_group=${OPTARG};;
    v) vault_name=${OPTARG};;
    s) storage_account_name=${OPTARG};;
    l) location=${OPTARG};;
  esac
done

if [[ ! "${resource_group}" ]] \
   || [[ ! "${storage_account_name}" ]] \
   || [[ ! "${vault_name}" ]] \
   || [[ ! "${location}" ]]; then
  out::error "arguments -g, -s , and -l must be provided"
  exit 1
fi

echo "Assign the role 'Storage Blob Data Contributor' to the current user"
azure::assign_storage_blob_data_contributor_role_to_user


echo "Create resource group ${resource_group}"
azure::create_resource_group "${resource_group}" "${location}"

echo "Creating container 'saml-keystore' in account ${storage_account_name}"
azure::create_storage_account "${resource_group}" "${location}" "${storage_account_name}"
azure:create_storage_container "${storage_account_name}" "saml-keystore"


echo "Generating keystore file"
local keystorePass=$(azure::get_secret_value "${vault_name}"  "saml-keystore-pass")
local privateKeyPass=$(azure::get_secret_value "${vault_name}"  "saml-private-key-pass")

# This step is interactive but can be parametrized and automated if necessary.
keytool -genkeypair 
    -alias "civiform-saml" \
    -keypass "${privateKeyPass}" \
    -keystore "civiformSamlKeystore.jks" \
    -storepass "${keystorePass}"  \
    -keyalg RSA -keysize 2048 -validity 3650

echo "Uploading keystore file"
azure::upload_blob "${storage_account_name}" "saml-keystore" "civiformSamlKeystore.jks"

echo "Printing public certificate. Copy this into the Service Provider Certificate field when configuring the SAML Identity Provider"
keytool -exportcert -alias "civiform-saml"  -keystore "civiformSamlKeystore.jks" -rfc -file "serviceProvider.cert"
cat "serviceProvider.cert"

echo "Cleaning up certificate and keystore files"
rm "civiformSamlKeystore.jks" "serviceProvider.cert"
