#! /usr/bin/env bash

# DOC: Connect to the database via the bastion
# example: ./db-connection -g sgdev -d civiform-artistic-halibut
key_name="bastion"
while getopts g:d:k flag
do
    case "${flag}" in
        g) resource_group=${OPTARG};;
        d) database_name=${OPTARG};;
        k) key_name=${OPTARG};;
    esac
done

if [[ ! -z "${resource_group}" ]] || [[ ! -z "${database_name}" ]]; then
  echo "arguments -g and -d must be provided"
  exit 1
fi

key_file="$HOME/.ssh/${key_name}"
if ! [[ -f "${key_file}" ]]; then
    echo "Creating a new ssh key"
    ssh-keygen -t rsa -b 4096 -f "${key_file}"
fi

echo "Getting the bastion vm's ip address"
vm_ip_address=$(az network public-ip show \
    -g "${resource_group}" \
    -n "${resource_group}-ip" \
    --query "ipAddress" | tr -d '"')

echo "Getting the postgres host name"
postgres_host=$(az postgres server show \
    -g "${resource_group}" \
    -n "${database_name}" \
    --query "fullyQualifiedDomainName" | tr -d '"')

# echo "Adding the public key to the bastion vm"
az vm user update \
    -u adminuser \
    -g "${resource_group}" \
    -n "${resource_group}-bstn-vm" \
    --ssh-key-value "$(< ~/.ssh/${key_name}.pub)"

echo "SSHing into machine and opening postgres, \
type command here and ctrl-d to exit"
# todo: add a pgpass file here
ssh -i "$HOME/.ssh/${key_name}" "adminuser@${vm_ip_address}" \
    "export DEBIAN_FRONTEND='noninteractive'; \
    yes | sudo apt-get update > /dev/null; \
    yes | sudo apt-get install postgresql-client > /dev/null; \
    psql -h ${postgres_host} -d postgres -U psqladmin@${postgres_host}"
