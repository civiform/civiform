#! /usr/bin/env bash

# DOC: Runs creates the azure staging environment

set -e

readonly THIS_DIR="$(realpath "$(dirname "${BASH_SOURCE}")")"
readonly PROJECT_BASE_DIR="$(realpath "${THIS_DIR}/../../../")"

source "${PROJECT_BASE_DIR}/cloud/azure/bin/lib.sh"

readonly TF_VAR_FILE="${THIS_DIR}/staging.tfvars"
readonly TEMPLATE_DIR="${PROJECT_BASE_DIR}/cloud/azure/templates/azure_saml_ses"
readonly VARS_FILENAME="${THIS_DIR}/staging_azure_backend_vars"
readonly TFSTATE_RESOURCE_GROUP_NAME="tfstate"

# These values will eventually be set by a configuration file, but they are hardcoded for now
readonly RESOURCE_GROUP_NAME="civiform-resourcegroup"
readonly RESOURCE_GROUP_LOCATION="EastUS"
readonly KEY_VAULT_NAME="staging-civiform-kv"
readonly SAML_KEYSTORE_STORAGE_ACCOUNT="staging-civiform-keystore"

readonly SSH_KEY_FILE="${HOME}/.ssh/bastion"

if ! [[ -f "${SSH_KEY_FILE}" ]]; then
  echo "Creating a new ssh key"
  ssh-keygen -t rsa -b 4096 -f "${SSH_KEY_FILE}"
fi

key_vault::assign_secrets_officer_role_to_user "staging-kv-rg"
storage::assign_storage_blob_data_contributor_role_to_user "${TFSTATE_RESOURCE_GROUP_NAME}"

cloud/azure/bin/setup_tf_shared_state "${VARS_FILENAME}"

azure::create_resource_group "${RESOURCE_GROUP_NAME}" "${RESOURCE_GROUP_LOCATION}"

cloud/azure/bin/setup-keyvault -g "${RESOURCE_GROUP_NAME}" -v "${KEY_VAULT_NAME}" -l "${RESOURCE_GROUP_LOCATION}"

cloud/azure/bin/setup-saml-keystore \
  -g "${RESOURCE_GROUP_NAME}" \
  -v "${KEY_VAULT_NAME}"  \
  -l "${RESOURCE_GROUP_LOCATION}" \
  -s "${SAML_KEYSTORE_STORAGE_ACCOUNT}"

read -p "Enter your AWS Username: " AWS_USERNAME
cloud/azure/bin/ses-to-keystore -v "${KEY_VAULT_NAME}" -u "${AWS_USERNAME}"

terraform \
  -chdir="${TEMPLATE_DIR}" \
  init \
  -backend-config="${VARS_FILENAME}"

terraform \
  -chdir="${TEMPLATE_DIR}" \
  apply \
  -var-file="${TF_VAR_FILE}"

# TODO: Make sure the vars required for the commands below are set.
# This needs to be done outside of Terraform because the Terraform provider doesn't
# support app settings that are bound to specific slots
azure::set_app_base_url_canary "${RESOURCE_GROUP_NAME}"
azure::set_app_base_url_primary "${RESOURCE_GROUP_NAME}" "${APP_HOSTNAME}"
