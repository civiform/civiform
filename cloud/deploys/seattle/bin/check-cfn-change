#!/bin/bash

# DOC: Check cloudformation configuration for correctness.

set -e

if [ -z "$GITHUB_EVENT_PATH" ]; then
  PR_NUMBER=localrun-$USER
else
  PR_NUMBER=$(jq -r .pull_request.number "$GITHUB_EVENT_PATH")
fi

TIMESTAMP=$(date +%s)
REGION=us-west-2
STACK=civiform-staging
if [ ! -z "$1" ]; then
  STACK="$1"
fi

if [ "$STACK" == civiform ] ; then
  ENVIRONMENT=prod
else
  ENVIRONMENT=staging
fi

echo "checking if a changeset exists already..."
if aws cloudformation describe-change-set --region ${REGION}  --change-set-name auto-changeset-pr-$PR_NUMBER  --stack-name "$STACK" > /dev/null; then
  echo "deleting..."
  aws cloudformation delete-change-set --region ${REGION}  --change-set-name auto-changeset-pr-$PR_NUMBER  --stack-name "$STACK"
  sleep 5
fi

while aws cloudformation describe-change-set --region ${REGION}  --change-set-name auto-changeset-pr-$PR_NUMBER  --stack-name "$STACK" > /dev/null; do
  sleep 5
done

aws s3 sync ./infra s3://seattle-civiform-cftmpl/${TIMESTAMP}

aws cloudformation create-change-set --region ${REGION} --include-nested-stacks --stack-name "$STACK" --change-set-name auto-changeset-pr-$PR_NUMBER --template-url  https://seattle-civiform-cftmpl.s3-${REGION}.amazonaws.com/$TIMESTAMP/stack.yaml --parameters "[{\"ParameterKey\": \"Timestamp\", \"ParameterValue\": \"$TIMESTAMP\"}, {\"ParameterKey\": \"Environment\", \"ParameterValue\": \"$ENVIRONMENT\"}]"

sleep 5

rootcs=$(aws cloudformation describe-change-set --region ${REGION} --change-set-name auto-changeset-pr-$PR_NUMBER --stack-name "$STACK")
while [ "$(echo "$rootcs" | jq -r '.Status')" == "CREATE_IN_PROGRESS" ]; do
  echo "Still creating, waiting..."
  sleep 10
  rootcs=$(aws cloudformation describe-change-set --region ${REGION} --change-set-name auto-changeset-pr-$PR_NUMBER --stack-name "$STACK")
done


rootcs=$(aws cloudformation describe-change-set --region ${REGION} --change-set-name auto-changeset-pr-$PR_NUMBER --stack-name "$STACK")

if [ "$(echo "$rootcs" | jq -r '.Status')" != "CREATE_COMPLETE" ]; then
  echo "::set-output name=failure_msg::$(echo "$rootcs" | jq -r '.StatusReason')"
  exit 1
fi

set +e
rm /tmp/message
for csn in $(echo $rootcs | jq -r '.Changes[].ResourceChange.ChangeSetId') ; do
  cs=$(aws cloudformation describe-change-set --region ${REGION} --change-set-name $csn)
  echo "$cs" | jq '.Changes[] | if .ResourceChange.Replacement == "True" then .ResourceChange.LogicalResourceId else null end' | grep -v "null" >> /tmp/message
  if [ "$(echo "$cs" | jq -r '.Status')" != "CREATE_COMPLETE" ]; then
    echo "::set-output name=failure_msg::$(echo "$cs" | jq -r '.StatusReason')"
    exit 1
  fi
done
set -e

echo "::set-output name=changes_msg::$(cat /tmp/message | jq -s -c '.')"
