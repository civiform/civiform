#! /usr/bin/env bash

# DOC: Pull the latest development environment docker image from Docker Hub
# DOC: unless USE_LOCAL_CIVIFORM or CI (set in GitHub actions) is set. May
# DOC: specify what to pull with a flag
# DOC: e.g. "--formatter", "--localstack", or "--all" (the default).
# DOC: If multiple flags are passed, all but the first will be ignored.
# DOC: Use "--help" to display all pull image options

source bin/lib.sh

if [[ "${USE_LOCAL_CIVIFORM}" == 1 || "${USE_LOCAL_CIVIFORM}" == "true" ]]; then
  echo "Using local civiform and dependency docker images"
  exit 0
fi

if [[ -n "${CI}" ]]; then
  echo "Using local civiform and dependency docker images"
  exit 0
fi

echo "Making sure we're up to date with the latest dev... " \
  "set environment variable USE_LOCAL_CIVIFORM=1 / CI=true to skip"

function pull_all() {
  echo "Pull all docker images"
  docker pull civiform/civiform-dev:latest

  # Explicitly pull dev dependencies. (in parallel)
  docker pull civiform/oidc-provider:latest &
  docker pull mcr.microsoft.com/azure-storage/azurite &
  docker pull localstack/localstack &

  docker pull civiform/civiform-localstack:latest &
  docker pull civiform/formatter:latest &
  docker pull civiform/civiform-browser-test:latest &
  docker pull civiform/mock-web-services:latest &

  wait

  docker tag civiform/civiform-dev:latest civiform-dev
  docker tag civiform/formatter:latest civiform-formatter
  docker tag civiform/civiform-localstack:latest civiform-localstack
  docker tag civiform/oidc-provider:latest civiform-oidc-provider
  docker tag civiform/civiform-browser-test:latest civiform-browser-test
  docker tag civiform/mock-web-services:latest civiform-mock-web-services
}

if [[ $# -eq 0 ]]; then
  pull_all
  exit 0
fi

while [ "${1:-}" != "" ]; do
  case "${1}" in
    "--all")
      pull_all
      ;;

    "--dev")
      echo "Pull dev docker image"
      docker pull civiform/civiform-dev:latest
      docker tag civiform/civiform-dev:latest civiform-dev
      ;;

    "--formatter")
      echo "Pull formatter docker image"
      docker pull civiform/formatter:latest
      docker tag civiform/formatter:latest civiform-formatter
      ;;

    "--localstack")
      echo "Pull localstack docker image"
      docker pull civiform/civiform-localstack:latest
      docker tag civiform/civiform-localstack:latest civiform-localstack
      ;;

    "--azurite")
      echo "Pull azurite docker image"
      docker pull mcr.microsoft.com/azure-storage/azurite
      ;;

    "--oidc-provider")
      echo "Pull oidc-provider docker image"
      docker pull civiform/oidc-provider:latest
      docker tag civiform/oidc-provider:latest civiform-oidc-provider
      ;;

    "--browser-tests")
      echo "Pull browser-tests docker image"
      docker pull civiform/civiform-browser-test:latest
      docker tag civiform/civiform-browser-test:latest civiform-browser-test
      ;;

    "--mock-web-services")
      echo "Pull mock-web-services docker image"
      docker pull civiform/mock-web-services:latest
      docker tag civiform/mock-web-services:latest civiform-mock-web-services
      ;;

    "--help")
      echo ""
      echo "Update all images"
      echo ""
      echo "  --all                 All Images"
      echo ""
      echo "Update one or more specific images"
      echo ""
      echo "  --azurite             Microsoft Azurite"
      echo "  --browser-tests       CiviForm Browser Test"
      echo "  --dev                 CiviForm Development"
      echo "  --formatter           CiviForm Formatter"
      echo "  --localstack          Localstack (AWS emulator)"
      echo "  --mock-web-services   CiviForm Mock Web Services"
      echo "  --oidc-provider       CiviForm OIDC Provider"
      echo ""
      ;;

    *)
      out::error "Unexpected flag value ${1}"
      exit 1
      ;;
  esac

  shift
done
