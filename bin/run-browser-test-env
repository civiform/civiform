#!/bin/bash

# DOC: Run the app locally using Docker for use with running browser tests. Run with --help to print documentation.

pushd $(git rev-parse --show-toplevel) > /dev/null

set -e

source bin/lib.sh

# Default to continuous integration mode disabled.
truth::declare_var_false continuous_integration

# Default to AWS/Localstack emulator.
cloud_provider="aws"
emulator="localstack"
server_url="http://localhost:6645"
STORAGE_SERVICE_NAME="s3"

#######################################
# Ensure that only one cloud provider flag was passed tot he script.
# Exit with error message and status code 1 if more than
# Globals:
#   cloud_provider
#   already_set_cloud_provider
# Arguments:
#   1: the cloud provider indicated by the flag currently being processed
#######################################
truth::declare_var_false already_set_cloud_provider
function ensure_only_one_cloud_provider_flag() {
  if truth::is_enabled already_set_cloud_provider; then
    local duplicate_providers="${cloud_provider} and ${1}"
    echo "One cloud provider flag can be set but found both ${duplicate_providers}"
    exit 1
  fi

  truth::enable already_set_cloud_provider
}

#######################################
# Process the script's commandline args.
# Globals:
#   continuous_integration
#   already_set_cloud_provider
#   cloud_provider
#   emulator
#   server_url
#   STORAGE_SERVICE_NAME
# Arguments:
#   1: "$@" - full args array for the script
#######################################
function set_args() {
  while [ "${1:-}" != "" ]; do
    case "$1" in
      "--help")
        cat <<-EOF
Usage: bin/run-browser-test-env [options]

Run a local civiform environment for the browser tests to exercise.

Options:

--ci    Run the environment in CI mode. Removes caching for SBT builds and
        redirects log statements to a .dockerlogs file. Defaults to off.

--aws   Use the AWS emulator (Localstack) for simulating cloud services,
        cannot be used with --azure flag. This is the default.

--azure Use the Azure emulator (Azurite) for simluating cloud services,
        cannot be used with --aws flag.
EOF
        exit 0
        ;;

      "--ci")
        truth::enable continuous_integration
        ;;

      "--azure")
        ensure_only_one_cloud_provider_flag azure
        cloud_provider="azure"
        emulator="azurite"
        server_url="http://localhost:10000"
        STORAGE_SERVICE_NAME="azure-blob"
        ;;

      "--aws")
        ensure_only_one_cloud_provider_flag aws
        # Already defaulted to AWS.
       ;;
    esac

    shift
  done
}

set_args "$@"

readonly STORAGE_SERVICE_NAME
export STORAGE_SERVICE_NAME

bin/pull-image

if [ -f ".secrets" ]; then
  . .secrets
fi

compose_command="docker-compose --profile ${cloud_provider}"
compose_command="${compose_command} -f browser-test/browser-test-compose.yml"

if truth::is_disabled continuous_integration; then
  # If not running in CI, load the dev addition to the browser test compose
  # this mounts the local SBT cache directories for faster subsequent builds.
  compose_command="${compose_command} -f browser-test/browser-test-compose.dev.yml"
fi

compose_command="${compose_command} up"

readonly START_EMULATOR_COMMAND="${compose_command} -d ${emulator}"
echo "Running docker compose to start the cloud emulator:"
echo "${START_EMULATOR_COMMAND}"

# Start emulator.
eval "${START_EMULATOR_COMMAND}"

# Wait until the emulator is running.
"bin/${emulator}/wait" "${server_url}"

if truth::is_enabled continuous_integration; then
  compose_command="${compose_command} > .dockerlogs 2>&1 &"
fi

echo "Running docker compose to start the CiviForm environment:"
echo "${compose_command}"

# Start everything else.
eval "${compose_command}"

popd
