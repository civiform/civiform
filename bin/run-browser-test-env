#!/bin/bash

# DOC: Run the app locally using Docker for use with running browser tests.

pushd $(git rev-parse --show-toplevel)

set -e

bin/pull-image

if [ -f ".secrets" ]; then
  . .secrets
fi

background="no"

# Get cloud provider
_setArgs(){
  while [ "${1:-}" != "" ]; do
    case "$1" in
      "--background")
        background="yes"
        ;;

      "--azure")
        cloudProvider="azure"
        emulator="azurite"
        devServer="http://localhost:10000"
        export STORAGE_SERVICE_NAME="azure-blob"
        ;;

      "--aws")
        cloudProvider="aws"
        emulator="localstack"
        devServer="http://localhost:6645"
        export STORAGE_SERVICE_NAME="s3"
       ;;
    esac

    shift
  done
}

_setArgs "$@"

# default to AWS for now
if [ -z "$cloudProvider" ]; then
  cloudProvider="aws" && emulator="localstack" && devServer="http://localhost:6645"
  export STORAGE_SERVICE_NAME="s3"
fi

# start emulator
docker-compose --profile "${cloudProvider}" \
  -f browser-test/browser-test-compose.yml \
  -f browser-test/browser-test-compose.dev.yml \
  up -d "${emulator}"

# wait until emulator running
"bin/${emulator}/wait" "${devServer}"

# start everything else
compose_command="docker-compose"
compose_command="${compose_command} -f browser-test/browser-test-compose.yml"
compose_command="${compose_command} -f browser-test/browser-test-compose.dev.yml"
compose_command="${compose_command} up"

if [[ "${background}" = "yes" ]]; then
  compose_command="${compose_command} > .dockerlogs 2>&1 &"
fi

eval "${compose_command}"

popd
