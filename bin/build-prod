#! /usr/bin/env bash

# DOC: Build a new production docker image, tagged with short commit SHA and unix seconds timestamp, and optionally push to Docker Hub if PUSH_IMAGE is set to anything. Builds for "linux/amd64" unless PLATFORM is set

source bin/lib.sh

export DOCKER_BUILDKIT=1
readonly SHORT_SHA="$(git rev-parse --short HEAD)"
readonly GIT_SHA="$(git rev-parse HEAD)"
readonly DATE_IN_UNIX_SECONDS="$(date +%s)"
readonly SNAPSHOT_TAG="SNAPSHOT-${SHORT_SHA}-${DATE_IN_UNIX_SECONDS}"
readonly IMAGE="civiform"
readonly LOCATION="."
readonly DOCKERFILE="prod.Dockerfile"
readonly HOST_CPU_ARCH="$(docker info --format='{{.Architecture}}')"

if [[ "${HOST_CPU_ARCH}" != "x86_64" ]]; then
  echo "----------------------------------------------------------------"
  echo " WARNING"
  echo "----------------------------------------------------------------"
  echo " Detected ${HOST_CPU_ARCH} as host system cpu architecture."
  echo " Currently only x86_64 is supported by our prod.Dockerfile."
  echo "----------------------------------------------------------------"
  echo ""
  exit 1
fi

echo "Building ${SNAPSHOT_TAG}..."

BUILD_ARGS="-f ${DOCKERFILE}
  -t civiform/${IMAGE}
  -t civiform/${IMAGE}:latest
  -t civiform/${IMAGE}:${SNAPSHOT_TAG}
  --cache-from civiform/${IMAGE}
  --build-arg BUILDKIT_INLINE_CACHE=1
  --build-arg git_commit_sha=${GIT_SHA}
  --build-arg image_tag=${SNAPSHOT_TAG}
  ${LOCATION}"

readonly PLATFORM="${PLATFORM:-"linux/amd64"}" # default to x86-64 when platform not specified
readonly PLATFORM_ARG=(--platform "${PLATFORM}")

# Build the multi-platform image
echo "start ${IMAGE} build"
cmd="docker buildx build ${PLATFORM_ARG[@]} ${BUILD_ARGS}"
$cmd

# Load the image from the cache
echo "load ${IMAGE} build"
cmd="docker buildx build --load ${BUILD_ARGS}"
$cmd

if [[ "${PUSH_IMAGE}" ]]; then
  docker::do_dockerhub_login
  # Push the image from the cache to dockerhub
  echo "push ${IMAGE} build"
  cmd="docker buildx build --push ${PLATFORM_ARG[@]} ${BUILD_ARGS}"
  $cmd
fi

docker tag "civiform/${IMAGE}:latest" "${IMAGE}:latest"
