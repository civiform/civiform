#! /usr/bin/env bash

# DOC: Run the app locally using Docker. Useful for manual testing.

source bin/lib.sh

# Default to using Localstack emulator.
emulators::set_localstack_emulator_vars

#######################################
# Process the script's commandline args.
# Globals:
#   already_set_cloud_provider
#   cloud_provider
#   emulator
#   server_url
#   STORAGE_SERVICE_NAME
# Arguments:
#   1: "$@" - full args array for the script
#######################################
function set_args() {
  while [ "${1:-}" != "" ]; do
    case "$1" in
      "--azure")
        emulators::ensure_only_one_cloud_provider_flag azure
        emulators::set_azurite_emulator_vars
        ;;

      "--aws")
        emulators::ensure_only_one_cloud_provider_flag aws
        # Already defaulted to AWS.
        ;;
    esac

    shift
  done
}

set_args "$@"

bin/pull-image

docker::set_network_name_dev

# Start containers w/ specified emulator.
docker compose --profile "${cloud_provider}" \
  -f docker-compose.yml \
  -f docker-compose.dev.yml \
  up \
  -d "${emulator}"

# Wait until the emulator is running.
"bin/${emulator}/wait"

# Attach to the civiform container.
docker compose \
  -f docker-compose.yml \
  -f docker-compose.dev.yml \
  up \
  --wait \
  -d

bin/attach-dev
