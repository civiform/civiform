#! /usr/bin/env bash

# DOC: Run the app locally using Docker. Useful for manual testing.

source bin/lib.sh
docker::set_project_name_dev

# Default to using Localstack emulator.
emulators::set_localstack_emulator_vars

# Check available disk space for docker.
docker::check_disk_space

#######################################
# Process the script's commandline args.
# Globals:
#   already_set_cloud_provider
#   cloud_provider
#   emulator
#   server_url
#   STORAGE_SERVICE_NAME
# Arguments:
#   1: "$@" - full args array for the script
#######################################
function set_args() {
  while [ "${1:-}" != "" ]; do
    case "$1" in
      "--azure")
        emulators::ensure_only_one_cloud_provider_flag azure
        emulators::set_azurite_emulator_vars
        ;;

      "--aws")
        emulators::ensure_only_one_cloud_provider_flag aws
        # Already defaulted to AWS.
        ;;
    esac

    shift
  done
}

set_args "$@"

bin/pull-image

# Start containers w/ specified emulator.
docker::compose_dev --profile "${cloud_provider}" \
  up \
  -d "${emulator}"

# Wait until the emulator is running.
"bin/${emulator}/wait"

# Start the civiform container and dependancies.
docker::compose_dev up \
  --wait \
  -d

# Start a warmup request loop so that when the subsequent server startup is ready, we trigger lazy
# loading its edit-refresh resources so save developer time.
for i in {1..60}; do
  sleep 5
  if curl --output /dev/null --silent --fail http://localhost:9000; then
    break
  fi
done &

echo "Civiform starting locally at http://localhost:9000"

docker::dev_and_test_server_sbt_command "8457" runDevServer

docker::compose_dev stop civiform
