name: Tests

on:
  workflow_call:

  # Setting this enables manually triggering workflow in the GitHub UI
  # see https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow
  workflow_dispatch: {}

permissions: read-all

jobs:
  run_junit_tests:
    runs-on: ubuntu-latest
    steps:
      - name: check out ${{ env.GITHUB_REF }}
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test container
        env:
          DOCKER_BUILDKIT: 1
        run: bin/build-dev

      - name: Build dev-oidc
        env:
          DOCKER_BUILDKIT: 1
        run: bin/build-dev-oidc
      - name: Run tests
        run: bin/run-test-ci

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          file: server/code-coverage/report/jacoco.xml
          verbose: true
          # We're getting intermittent issues with codecov trying to upload lately
          # disabling it from failing the entire pipeline for now.
          fail_ci_if_error: false

  run_typescript_unit_tests:
    runs-on: ubuntu-latest
    steps:
      - name: check out ${{ env.GITHUB_REF }}
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test container
        env:
          DOCKER_BUILDKIT: 1
        run: bin/build-dev

      - name: Run tests
        run: bin/run-ts-tests

  run_browser_tests_aws:
    strategy:
      fail-fast: false
      matrix:
        shard_number: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    runs-on: ubuntu-latest
    steps:
      - name: check out ${{ env.GITHUB_REF }}
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test app container
        env:
          DOCKER_BUILDKIT: 1
        run: bin/build-dev

      - name: Build browser testing container
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USER_NAME }}
        run: bin/build-browser-tests

      - name: Build dev-oidc
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USER_NAME }}
        run: bin/build-dev-oidc

      - name: Build localstack
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USER_NAME }}
        run: bin/build-localstack-env

      - name: Build mock-web-services
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: civiform
        run: bin/build-mock-web-services

      - name: Bring up test env with Localstack
        env:
          CI: true
        run: bin/run-browser-test-env --aws --ci

      - name: Run browser tests with Localstack
        env:
          CI: true
        run: bin/run-browser-tests-ci --shard=${{ matrix.shard_number }}/${{strategy.job-total}}

      - name: Verify no new image snapshots added
        # jest-image-snapshots automatically adds snapshot if it's missing.
        # Use git diff to fail if we detect new images.
        run: git add browser-test/image_snapshots ; git diff --compact-summary --exit-code HEAD

      - name: Upload image diff outputs
        uses: actions/upload-artifact@v4
        with:
          name: image diff output directory (aws) - shard-${{ matrix.shard_number }}-run-${{ github.run_attempt }}
          retention-days: 3
          path: browser-test/diff_output
        if: failure()

      - name: Upload updated snapshots
        uses: actions/upload-artifact@v4
        with:
          name: updated snapshots output directory (aws) - shard-${{ matrix.shard_number }}-run-${{ github.run_attempt }}
          retention-days: 3
          path: browser-test/updated_snapshots
        if: failure()

      - name: Upload test videos on failure
        uses: actions/upload-artifact@v4
        with:
          name: tests videos (aws) - shard-${{ matrix.shard_number }}-run-${{ github.run_attempt }}
          retention-days: 3
          path: |
            browser-test/tmp/html-output/
            browser-test/tmp/videos/
        if: failure()
        
      - name: Print logs on failure
        if: failure()
        run: cat .dockerlogs

  run_browser_tests_azure:
    if: false
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: check out ${{ env.GITHUB_REF }}
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build test app container
        env:
          DOCKER_BUILDKIT: 1
        run: bin/build-dev
      - name: Build browser testing container
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USER_NAME }}
        run: bin/build-browser-tests
      - name: Build dev-oidc
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USER_NAME }}
        run: bin/build-dev-oidc
      - name: Build localstack
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USER_NAME }}
        run: bin/build-localstack-env
      - name: Build mock-web-services
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: civiform
        run: bin/build-mock-web-services
      - name: Bring up test env with Azurite
        env:
          CI: true
        run: bin/run-browser-test-env --azure --ci
      - name: Run browser tests with Azurite
        env:
          CI: true
        run: bin/run-browser-tests-azure
      - name: Upload image diff outputs
        uses: actions/upload-artifact@v4
        with:
          name: image diff output directory (azure) - run-${{ github.run_attempt }}
          path: browser-test/diff_output
        if: failure()
      - name: Upload test videos on failure
        uses: actions/upload-artifact@v4
        with:
          name: tests videos (azure) - run-${{ github.run_attempt }}
          path: browser-test/tmp
        if: failure()
      - name: Print logs on failure
        if: failure()
        run: cat .dockerlogs

  test_prod:
    runs-on: ubuntu-latest
    steps:
      - name: check out ${{ env.GITHUB_REF }}
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build prod container
        env:
          DOCKER_BUILDKIT: 1
        run: bin/build-prod

      - name: Set local prod container tag
        run: docker tag civiform:latest civiform:prod

      - name: Build the stack
        run: docker compose -f test-support/prod-simulator-compose.yml up -d
      - name: Test
        # Confirm that we get a response on port 9000.
        run: while ! docker run --network host appropriate/curl -v -s --retry-max-time 180 --retry-connrefused http://localhost:8888/ ; do sleep 5; done
        timeout-minutes: 3
      - name: Print logs on failure
        if: failure()
        run: docker compose logs
