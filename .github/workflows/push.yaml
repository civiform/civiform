name: ci

on:
  push:
    branches: main

  # Setting this enables manually triggering workflow in the GitHub UI
  # see https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow
  workflow_dispatch: {}

# Two probers running at once can break each other.
concurrency:
  group: stagingenvironment
  cancel-in-progress: true

jobs:
  validate_deployment_variable_definitions:
    runs-on: ubuntu-latest
    steps:
      - name: check out pr branch
        uses: actions/checkout@v3
      - name: Run deployment variable definition validation test
        run: python3 cloud/shared/validate_variable_definitions_test.py

  build_container:
    runs-on: ubuntu-18.04 # for older version of awscli.
    steps:
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.4

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push new development image to docker hub
        id: build_dev
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        run: bin/build-dev

      - name: Run build-browser-tests.
        id: build_browser_tests
        env:
          DOCKER_BUILDKIT: 1
          PUSH_BROWSER_TEST_IMAGE: 1
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        run: bin/build-browser-tests

      - name: Run build-and-push.
        id: build_and_push
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        run: bin/build-and-push

      - name: Deploy Seattle staging.
        id: deploy_staging
        env:
          DOCKER_BUILDKIT: 1
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
        run: cloud/deploys/seattle/bin/deploy-staging

      - name: Run prober test
        run: bin/run-prober
        env:
          TEST_USER_LOGIN: ${{ secrets.TEST_USER_LOGIN }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
