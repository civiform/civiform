name: Skip Tests

on:
  workflow_call:
    secrets:
      DOCKER_HUB_ACCESS_TOKEN:
        required: false
      DOCKER_HUB_USERNAME:
        required: false

  # Setting this enables manually triggering workflow in the GitHub UI
  # see https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow
  workflow_dispatch: {}

permissions: read-all

jobs:
  run_junit_tests:
    runs-on: ubuntu-latest
    steps:
      - run: 'echo "skipping"'

  setup-browser-test-matrix:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.build-matrix.outputs.matrix }}

    steps:
      - id: build-matrix
        env:
          # To get the branch name that we want we have to consider the event type. A PR will
          # use the head_ref whereas a push event (i.e. pushing an approve pr to main) needs
          # to look at the ref_name.          
          BRANCH_NAME: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
        run: |
          # Temporarily ignore errors so we can check grep for matches
          set +e
          echo "BranchName: ${{ env.BRANCH_NAME }}"
          echo "${{ env.BRANCH_NAME }}" | grep --quiet --ignore-case "azure"
          if [[ $? -eq 0 ]]; then
              matrix='{"cloud": ["aws", "azure"], "shard_number": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}'
          else
              matrix='{"cloud": ["aws"], "shard_number": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}'
          fi
          # Re-enable error checking
          set -e
          echo "matrix=${matrix}"
          echo "matrix=${matrix}" >> $GITHUB_OUTPUT

  run_browser_tests:
    needs: setup-browser-test-matrix
    strategy:
      # Default to only aws. If the branch name contains azure use aws and azure
      matrix: ${{ fromJson(needs.setup-browser-test-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - run: 'echo "skipping"'

  test_prod:
    runs-on: ubuntu-latest
    steps:
      - run: 'echo "skipping"'

  run_typescript_unit_tests:
    runs-on: ubuntu-latest
    steps:
      - run: 'echo "skipping"'

