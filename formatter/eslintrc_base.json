{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:no-unsanitized/DOM",
    // TODO(#3361): enable
    // "plugin:@typescript-eslint/strict",
    "google",
    "prettier"
  ],
  "env": {
    "browser": true,
    "commonjs": true
  },
  "plugins": ["@typescript-eslint"],
  "rules": {
    "require-jsdoc": "off",
    // valid-jsdoc is deprecated. If we want JSdoc checks we should use
    // https://github.com/gajus/eslint-plugin-jsdoc with TS-specific settings.
    "valid-jsdoc": "off",
    // default JS no-unused-vars causes false-positives on TS code. For example
    // enums.
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/unbound-method": [
      "error",
      {
        "ignoreStatic": true
      }
    ],
    // See TypeScript best practices in
    // https://github.com/civiform/civiform/wiki/Development-standards#typescript-code
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-unsafe-enum-comparison": "off",
    // Add method that we use to sanitize our HTML
    "no-unsanitized/property": [
      "error",
      {"escape": {"methods": ["DOMPurify.sanitize"]}}
    ]
  },
  "parserOptions": {
    "project": ["../server/tsconfig.json", "../browser-test/src/tsconfig.json"]
  }
}
