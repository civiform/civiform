# Builds on docker-compose.yml
# Mount code for hot reloading and cache for faster compile in dev mode.

# Shared yaml extensions (https://docs.docker.com/compose/compose-file/compose-file-v3/#extension-fields)
# Volume mapping shared between containers.
# Volumes to un-shadow build directories under server are created in the dockerfile.
x-sbt-volumes:
  volumes: &sbt-volumes
    - ./server:/usr/src/server

services:
  dev-oidc:
    ports:
      - 3390:3390

  civiform:
    build: .
    volumes: *sbt-volumes
    stdin_open: true # docker run -i
    tty: true # docker run -t
    restart: always
    ports:
      - 9000:9000
      - 8457:8457
      - 50000:50000

  civiform-shell:
    image: civiform-dev
    entrypoint: /bin/bash
    profiles: ['shell']
    volumes: *sbt-volumes
    stdin_open: true # docker run -i
    tty: true # docker run -t

  localstack:
    # Overrides the localstack image used to work around
    # https://github.com/seattle-uat/civiform/issues/2639.
    # Note that we don't set this in the base template
    # since it's not necessary for CI / browser test runs.
    image: civiform-localstack
    ports:
      - 4566:4566
  azurite:
    ports:
      - 10000:10000

  mock-web-services:
    image: civiform-mock-web-services

  db:
    image: postgres:16.9@sha256:fec2740c517838d4f582e48a8a9a1cb51082af3dcae59e9b12a66ec262302b97
    stdin_open: true
    tty: true
    volumes:
      # isolate and persist dev database.
      - project-data:/project
      - db-data:/var/lib/postgresql/data
      - ./init_postgres.sql:/docker-entrypoint-initdb.d/init_postgres.sql

  pgadmin:
    profiles: ['pgadmin']
    image: dpage/pgadmin4:9.6@sha256:2c7d73e13bd6c30b1d53e4c25d0d6d81adbd0799c4f4d6a09efc5d68fca5d16d
    restart: always
    depends_on:
      - db
    volumes:
      - /tmp/servers.json:/pgadmin4/servers.json
      - db-data:/var/lib/postgresql/data
    ports:
      - 8012:80
    environment:
      PGADMIN_DEFAULT_EMAIL: user@localhost.localdomain
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_CONFIG_WTF_CSRF_ENABLED: 'False'

  prometheus:
    profiles: ['monitoring']
    image: prom/prometheus@sha256:63805ebb8d2b3920190daf1cb14a60871b16fd38bed42b857a3182bc621f4996
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus

  grafana:  
    profiles: ['monitoring']
    image: grafana/grafana@sha256:d13597b9aa4b5be09cd63f1acc844b31b7d9f0ab76e33ec2891429573316a2a6
    depends_on:
      - prometheus
    restart: unless-stopped
    ports:
      - 8013:3000
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: true
    volumes:
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    links:
      - prometheus

volumes:
  db-data:
    driver: local
  grafana-data:
    driver: local
  node_modules-data:
    driver: local
  project-data:
    driver: local
  project-target-data:
    driver: local
  prometheus-data:
    driver: local
  target:
    driver: local
